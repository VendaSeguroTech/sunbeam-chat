create table if not exists chat_sessions (
  id bigint generated by default as identity primary key,
  session_id text not null unique,
  user_id uuid references auth.users not null,
  title text,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null,
  updated_at timestamp with time zone default timezone('utc'::text, now())
);

-- RLS policies
alter table chat_sessions enable row level security;

create policy "Allow users to manage their own chat sessions"
on chat_sessions for all
using (auth.uid() = user_id)
with check (auth.uid() = user_id);

-- Function to update title
create or replace function update_chat_session_title(
  _session_id text,
  _new_title text
)
returns void as $$
begin
  insert into chat_sessions (session_id, user_id, title, updated_at)
  values (_session_id, auth.uid(), _new_title, now())
  on conflict (session_id)
  do update set
    title = _new_title,
    updated_at = now();
end;
$$ language plpgsql;